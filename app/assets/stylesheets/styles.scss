// –– Generic styles ––––––––––––––––––––––––––––––––
// i.e. styles applied to generic tags
// see https://dev.to/hankchizljaw/a-modern-css-reset-6p3 for normalization inspiration

* {
  &,
  &::before,
  &::after {
    box-sizing: border-box;
  }
}

html {
  -webkit-text-size-adjust: 100%;
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-font-kerning: normal;
  -ms-font-feature-settings: "lnum" 1, "kern" 1, "liga" 1;
  -o-font-feature-settings: "lnum" 1, "kern" 1, "liga" 1;
  background-color: $bg-color-primary;
  color: $text-color-primary;
  font: $base-font;
  font-feature-settings: "lnum" 1, "kern" 1, "liga" 1;
  font-kerning: normal;
  font-variant-ligatures: common-ligatures;
  letter-spacing: .0125em;
  margin: 0;
  text-rendering: optimizeLegibility;
  min-height: 100vh;
}

@supports (font-variation-settings: normal) {
  body { font-family: 'Inter var', $base-font-family; }
}

ul[class],
ol[class] {
  padding: 0;
  list-style: none;
}

body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
dt {
  font-size: inherit;
  font-weight: $bold-font-weight;
  letter-spacing: .045em;
  line-height: inherit;
  text-transform: uppercase;
}

a {
  background-color: transparent;
  color: $text-color-link;
  border-bottom: $border-width solid transparent; // 'transparent' so that there's always a border, even when not hovered, which prevents nudgeing.
  text-decoration: none;

  &:active,
  &:hover {
    border-bottom-color: $text-color-link;
  }

  &:not([class]) {
    text-decoration-skip-ink: auto;
  }
}

b,
strong,
th {
  font-weight: $bold-font-weight;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible
}

img,
picture {
  display: block;
  width: 100%;
}

svg {
  display: inline-block;
  height: 1em;
  width: auto;
  fill: none;
  stroke: currentColor;
}

address,
input,
button,
textarea,
select {
  font: inherit;
}

@import 'grid';

// –– Individual styles –––––––––––––––––––––––––––––

.site-logo {
  height: 3em;
  transition: $transition-duration cubic-bezier(.3,0,.5,1);
  transition-property: transform, color;
  cursor: pointer;

  &:active,
  &:hover {
    transform: rotate(60deg);
    color: #5889d6;
  }
}

.navbar {
  background-color: $bg-color-secondary;
  padding: $gutter;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.icon {
  height: 1.4em;
}

.dot-label {
  display: inline-block;
  font-size: $small-font-size;
  color: $text-color-secondary;

  & > .dot {
    position: relative;
    top: .15em;
    display: inline-block;
    margin-right: .25em;
    width: 1em;
    height: 1em;
    border: $border-width solid rgba(205, 217, 229, 0.2);
    border-radius: 50%;
  }
}

.keys {
  display: inline-block;
  font-size: $small-font-size;
  color: $text-color-secondary;
}

.card {
  margin: ($gutter / 2) 0;

  &-header {
    font-weight: 500;
  }

  &-content {
    margin: ($gutter / 2) 0;
  }

  &-footer {
    & > * + * {
      margin-left: $vr;
    }
  }
}

.button {
  background-color: $button-bg-primary;
  display: inline-block;
  padding: ($gutter / 4) $gutter;
  font-weight: $bold-font-weight;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  border: $border-width solid $grey-600;
  border-radius: $border-radius;
  appearance: none;
  transition: $transition-duration cubic-bezier(.3,0,.5,1);
  transition-property: background-color,border-color;

  &:hover,
  &:active {
    background-color: $grey-600;
    border-color: $grey-300;
  }
}

.icon {

}

.box {
  margin: $gutter 0;
  border-radius: $border-radius;
  border: $border-base;

  & > *:last-child {
    margin-bottom: 0;
  }

  &-header {
    padding: $gutter;
    margin-bottom: ($border-width * -1); // this is to compensate the border-bottom of 1px
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: sticky;
    top: 0;
    background-color: $bg-color-secondary;
    border-top-left-radius: $border-radius;
    border-top-right-radius: $border-radius;
    border-bottom: $border-base;
  }

  &-content {
    padding: ($gutter / 2) $gutter;
  }

  ul.box-content {
    margin-top: 0;
    padding: 0;
    border: 0;

    li {
      padding: ($gutter / 2) $gutter;
      border-top: $border-base;
      transition: background-color $transition;

      &:active,
      &:hover {
        background-color: $bg-color-secondary;
      }
    }

    & > *:first-child {
      border-top: 0;
    }
  }
}

.role {
  &-client {
    background-color: $green;
  }

  &-adversary {
    background-color: $red;
  }

  &-employee {
    background-color: $blue;
  }

  &-other {
    background-color: $yellow;
  }
}

// –– Finals ––––––––––––––––––––––––––––––––––––––––

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    -webkit-animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    scroll-behavior: auto !important;
    transition-duration: 0.01ms !important;
  }
}
